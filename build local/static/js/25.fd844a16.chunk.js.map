{"version":3,"sources":["views/user/Profile.js","services/user.js"],"names":["withNamespaces","t","useState","userData","setUserData","user","useSelector","state","useEffect","getProfile","data","_id","res","notification","error","message","description","placement","duration","className","xs","sm","title","bordered","Item","label","span","username","phone","email","promo_code","process","onClick","generateCode","success","register","callback","axios","post","then","catch","err","response","id","AxiosConfig","get","status","getToken"],"mappings":"iRAgGeA,yBAzFC,SAAC,GAAW,IAATC,EAAQ,EAARA,EAAQ,EACSC,qBADT,mBAChBC,EADgB,KACNC,EADM,KAGjBC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAExCG,qBAAU,WACNC,YAAWJ,EAAKK,KAAKC,KAAK,SAAAC,GAClBA,EAAIP,KACJD,EAAYQ,EAAIP,MAEhBQ,IAAaC,MAAM,CACfC,QAASd,EAAE,gBACXe,YAAY,GAAD,OAAKJ,EAAIG,SACpBE,UAAU,cACVC,SAAU,WAIvB,IAmCH,OACI,mCACI,cAAC,IAAD,CAAMC,UAAU,yBAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACKlB,EACG,eAAC,IAAD,CAAcmB,MAAOrB,EAAE,eAAgBsB,UAAQ,EAA/C,UACI,cAAC,IAAaC,KAAd,CAAmBC,MAAOxB,EAAE,YAAayB,KAAM,EAA/C,SACKvB,EAASwB,WAEd,cAAC,IAAaH,KAAd,CAAmBC,MAAOxB,EAAE,SAAUyB,KAAM,EAA5C,SACKvB,EAASyB,QAEd,cAAC,IAAaJ,KAAd,CAAmBC,MAAOxB,EAAE,UAAWyB,KAAM,EAA7C,SACKvB,EAAS0B,QAEd,cAAC,IAAaL,KAAd,CAAmBC,MAAOxB,EAAE,cAAeyB,KAAM,EAAjD,SACKvB,EAAS2B,WAAT,UACMC,uEADN,OACwC5B,EAAS2B,YAC5C,cAAC,IAAD,CAAQE,QAAS,WApDvDC,aAAa,SAAArB,GACLA,EAAIkB,YACJjB,IAAaqB,QAAQ,CACjBnB,QAASd,EAAE,gBACXe,YAAY,GAAD,OAAKJ,EAAIG,SACpBE,UAAU,cACVC,SAAU,MAGdT,YAAWJ,EAAKK,KAAKC,KAAK,SAAAC,GAClBA,EAAIP,KACJD,EAAYQ,EAAIP,MAEhBQ,IAAaC,MAAM,CACfC,QAASd,EAAE,gBACXe,YAAY,GAAD,OAAKJ,EAAIG,SACpBE,UAAU,cACVC,SAAU,UAKtBL,IAAaC,MAAM,CACfC,QAASd,EAAE,gBACXe,YAAY,GAAD,OAAKJ,EAAIG,SACpBE,UAAU,cACVC,SAAU,UA0BgB,SACGjB,EAAE,wBAKnB,mB,iCCtFhC,4IAIO,SAASkC,EAASzB,EAAM0B,GAC3BC,IAAMC,KAAN,UAAcP,wBAAd,uBAA8DrB,GACzD6B,MAAK,SAAA3B,GACFwB,EAASxB,EAAIF,SAEhB8B,OAAM,SAAAC,GACCA,EAAIC,UACJN,EAASK,EAAIC,SAAShC,SAK/B,SAASD,EAAWkC,EAAIP,GACPQ,cAERC,IAAZ,iBAA0BF,IAAMJ,MAAK,SAAA3B,GACjCwB,EAASxB,EAAIF,SAEhB8B,OAAM,SAAAC,GACCA,EAAIC,WACwB,MAAxBD,EAAIC,SAASI,OACbC,YAAStC,EAAWkC,EAAIP,IAExBA,EAASK,EAAIC,SAAShC,UAM/B,SAASuB,EAAaG,GACLQ,cAERN,KAAZ,qBAAsCC,MAAK,SAAA3B,GACvCwB,EAASxB,EAAIF,SAEhB8B,OAAM,SAAAC,GACCA,EAAIC,WACwB,MAAxBD,EAAIC,SAASI,OACbC,YAASd,EAAaG,IAEtBA,EAASK,EAAIC,SAAShC","file":"static/js/25.fd844a16.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { CCard, CCardBody, CCol, CRow } from '@coreui/react';\r\nimport { Button, Descriptions, notification } from 'antd';\r\nimport { getProfile, generateCode } from 'src/services/user';\r\nimport { useSelector } from 'react-redux';\r\nimport { withNamespaces } from 'react-i18next';\r\n\r\nconst Profile = ({ t }) => {\r\n    const [userData, setUserData] = useState();\r\n\r\n    const user = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        getProfile(user.data._id, res => {\r\n            if (res.user) {\r\n                setUserData(res.user)\r\n            } else {\r\n                notification.error({\r\n                    message: t(`Notification`),\r\n                    description: `${res.message}`,\r\n                    placement: `bottomRight`,\r\n                    duration: 1.5,\r\n                });\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const createCode = () => {\r\n        generateCode(res => {\r\n            if (res.promo_code) {\r\n                notification.success({\r\n                    message: t(`Notification`),\r\n                    description: `${res.message}`,\r\n                    placement: `bottomRight`,\r\n                    duration: 1.5,\r\n                });\r\n\r\n                getProfile(user.data._id, res => {\r\n                    if (res.user) {\r\n                        setUserData(res.user)\r\n                    } else {\r\n                        notification.error({\r\n                            message: t(`Notification`),\r\n                            description: `${res.message}`,\r\n                            placement: `bottomRight`,\r\n                            duration: 1.5,\r\n                        });\r\n                    }\r\n                })\r\n            } else {\r\n                notification.error({\r\n                    message: t(`Notification`),\r\n                    description: `${res.message}`,\r\n                    placement: `bottomRight`,\r\n                    duration: 1.5,\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"justify-content-center\">\r\n                <CCol xs=\"12\" sm=\"12\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                            {userData ? \r\n                                <Descriptions title={t(\"User's Info\")} bordered>\r\n                                    <Descriptions.Item label={t(\"Username\")} span={3}>\r\n                                        {userData.username}\r\n                                    </Descriptions.Item>\r\n                                    <Descriptions.Item label={t(\"Phone\")} span={3}>\r\n                                        {userData.phone}\r\n                                    </Descriptions.Item>\r\n                                    <Descriptions.Item label={t(\"E-mail\")} span={3}>\r\n                                        {userData.email}\r\n                                    </Descriptions.Item>\r\n                                    <Descriptions.Item label={t(\"Promo Code\")} span={3}>\r\n                                        {userData.promo_code ? \r\n                                            `${process.env.REACT_APP_PROMO_URL}${userData.promo_code}` \r\n                                            : <Button onClick={() => createCode()}>\r\n                                                {t(\"Generate Code\")}\r\n                                            </Button>}\r\n                                    </Descriptions.Item>\r\n                                </Descriptions>\r\n                            : \r\n                                null\r\n                            }\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withNamespaces() (Profile);\r\n","import axios from \"axios\";\r\nimport { AxiosConfig } from \"src/configs\";\r\nimport { getToken } from \"./auth\";\r\n\r\nexport function register(data, callback) {\r\n    axios.post(`${process.env.REACT_APP_API}/api/users/register`, data)\r\n        .then(res => {\r\n            callback(res.data)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                callback(err.response.data)\r\n            }\r\n        }) \r\n}\r\n\r\nexport function getProfile(id, callback) {\r\n    const axiosConfig = AxiosConfig();\r\n\r\n    axiosConfig.get(`/users/${id}`).then(res => {\r\n        callback(res.data);\r\n    })\r\n    .catch(err => {\r\n        if (err.response) {\r\n            if (err.response.status === 403) {\r\n                getToken(getProfile(id, callback));\r\n            } else {\r\n                callback(err.response.data);\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport function generateCode(callback) {\r\n    const axiosConfig = AxiosConfig();\r\n\r\n    axiosConfig.post(`/users/promo_code`).then(res => {\r\n        callback(res.data);\r\n    })\r\n    .catch(err => {\r\n        if (err.response) {\r\n            if (err.response.status === 403) {\r\n                getToken(generateCode(callback));\r\n            } else {\r\n                callback(err.response.data);\r\n            }\r\n        }\r\n    })\r\n}"],"sourceRoot":""}